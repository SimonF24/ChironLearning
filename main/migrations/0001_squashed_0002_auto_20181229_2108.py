# Generated by Django 2.1.1 on 2018-12-30 05:10

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    replaces = [('main', '0001_squashed_0028_dashboard_message_created'), ('main', '0002_auto_20181229_2108')]

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', main.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='username',
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, unique=True, verbose_name='email address'),
        ),
        migrations.AddField(
            model_name='user',
            name='username',
            field=models.CharField(default=1, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='Email Address'),
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Concept')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Subject')),
                ('description', models.TextField(default='')),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Subject'),
        ),
        migrations.AddField(
            model_name='resource',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Topic'),
        ),
        migrations.AddField(
            model_name='concept',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Subject'),
        ),
        migrations.AddField(
            model_name='concept',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Topic'),
        ),
        migrations.AddField(
            model_name='concept',
            name='description',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='resource',
            name='description',
            field=models.TextField(default='', unique=True),
        ),
        migrations.AddField(
            model_name='subject',
            name='description',
            field=models.TextField(default=''),
        ),
        migrations.AlterField(
            model_name='concept',
            name='name',
            field=models.TextField(default=' '),
        ),
        migrations.RenameField(
            model_name='resource',
            old_name='link',
            new_name='normal_link',
        ),
        migrations.AlterField(
            model_name='resource',
            name='normal_link',
            field=models.TextField(default=' '),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name',
            field=models.TextField(default=' '),
        ),
        migrations.AlterField(
            model_name='concept',
            name='name',
            field=models.CharField(default=' ', max_length=200),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name',
            field=models.CharField(default=' ', max_length=200),
        ),
        migrations.AlterField(
            model_name='concept',
            name='name',
            field=models.CharField(default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='resource',
            name='normal_link',
            field=models.TextField(default=''),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name',
            field=models.CharField(default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='resource',
            name='normal_link',
            field=models.CharField(default='', max_length=300),
        ),
        migrations.AddField(
            model_name='resource',
            name='embed_link',
            field=models.CharField(default='', max_length=500),
        ),
        migrations.AddField(
            model_name='resource',
            name='rating_score',
            field=models.IntegerField(blank=True, default=0, editable=False),
        ),
        migrations.AddField(
            model_name='resource',
            name='rating_votes',
            field=models.PositiveIntegerField(blank=True, default=0, editable=False),
        ),
        migrations.AlterField(
            model_name='resource',
            name='normal_link',
            field=models.CharField(default='', max_length=500),
        ),
        migrations.AddField(
            model_name='resource',
            name='tags',
            field=models.CharField(default='', max_length=500),
        ),
        migrations.AlterField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.CreateModel(
            name='Dashboard_Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
